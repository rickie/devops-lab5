- hosts: cluster 
  become: true
  gather_facts: False
  tasks:
    - name: Bootstrap a host without python2 installed
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python)
      
    - name: Update apt-cache
      apt: update_cache=yes
      
    - name: Install container runtime environment
      apt:
        pkg:
        - containerd
        - apt-transport-https
        state: latest

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
  
    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        
    - name: Install a list of packagess
      apt: 
        pkg:
          - kubelet
          - kubeadm
          - kubernetes-cni

- hosts: k8-master
  become: yes
  tasks: 
    
    - name: Enable br_netfilter module
      shell: modprobe br_netfilter
      
    - name: Setup the iptables
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        
    - name: Forward ipv4
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
    
    - name: Reset kubeadm
      shell: kubeadm reset --force
        
    - name: Init kubeadm
      shell: kubeadm init      
      
    - name: Create the directory $HOME/.kube
      file: 
        path: $HOME/.kube
        state: directory
        mode: '0775'

    - name: Copy default configuration file over
      copy:
        remote_src: true
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0644'
  
    - name: Install the Weave Net addon
      shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
        
    - name: Taint the nodes
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-
        
    - name: Print join command
      shell: kubeadm token create --print-join-command ; echo
      register: command_output

    - name: Add command_output to dummy host
      add_host:
        name: "command_output_holder"
        paswd: "{{ command_output.stdout }}"
    
- hosts: k8-worker
  become: yes
  tasks: 
        
    - name: Execute the join command
      shell: |
        echo " {{ hostvars['command_output_holder']['paswd'] }}"

- hosts: k8-master
  become: yes
  tasks: 
    - name: Get the nodes
      shell: kubectl get nodes
      register: command_output
    
    - name: Debug print the output of the command
      debug:
        var: command_output
        verbosity: 2
    
    - name: Print the output of the command
      debug: 
        msg: " {{ command_output }}"



